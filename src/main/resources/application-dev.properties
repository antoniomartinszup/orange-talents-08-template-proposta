############## H2 CONFIGURATION #################
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.datasource.url=jdbc:tracing:h2:mem:propostadb
spring.datasource.driver-class-name=io.opentracing.contrib.jdbc.TracingDriver
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.dll-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# feign
feign.client.financeiro=${ANALISE_URL:localhost:9999}
feign.client.config.apiAvaliacaoFinanceira.read-timeout=100
feign.client.config.apiAvaliacaoFinanceira.connect-timeout=100
feign.client.cartao=${CONTAS_URL:localhost:8888}

analise.cartao=${ANALISE.CARTAO:20000}
bloquear.cartao=${BLOQUEAR.CARTAO:22000}

# actuator
management.endpoint.health.show-details=always
info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# METRICS / PROMETHEUS
management.endpoints.web.exposure.include=info, health, metrics, prometheus

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta-cartao/protocol/openid-connect/certs}
logging.level.org.springframework.security=DEBUG

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${NOME_APLICACAO:Proposta}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
